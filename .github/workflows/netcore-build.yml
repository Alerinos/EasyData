name: EasyData.NET Pipeline 

on:
  workflow_dispatch:
    inputs:
      release_mode:
        description: 'Release mode (none, dev, prod)'
        required: true
        default: 'none'

  push:
    branches: 
      - master 
    paths: 
      - .github/workflows/netcore-build.yml
      - easydata.net/** 
    tags:
      - v*    

  pull_request:
    branches: 
      - master 
    paths: 
      - .github/workflows/netcore-build.yml
      - easydata.net/** 

jobs:
  build_and_test:
    name: Build & Test
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Read version.json
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: ./easydata.net/version.json

    - name: Install dependencies
      run: dotnet restore EasyData.Dev.sln

    - name: Build & Pack
      run: dotnet pack EasyData.sln -o ./easydata.net/packs --configuration Release --no-restore -p:Version=${{ fromJSON(steps.version.outputs.content).assemblyVersion }} -p:PackageVersion=${{ fromJSON(steps.version.outputs.content).packageVersion }}

    - name: Test
      run: dotnet test EasyData.Dev.sln --no-restore --verbosity normal

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: packs
        path: ./easydata.net/packs/**/*.nupkg
  
  release_dev:
    name: Development Release
    needs: [ build_and_test ]
    if: github.event.inputs.release_mode == 'dev' && needs.build_and_test.result == 'success'
    runs-on: windows-latest

    steps:        
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: packs
        path: packs

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Publish packages to MyGet
      run: dotnet nuget push packs/**/*.nupkg -s https://www.myget.org/F/korzh-nuget/api/v2/package -k ${{ secrets.MYGET_ACCESS_TOKEN }}
  
  release_prod:
    name: Production Release
    needs: [ build_and_test ]
    if: (github.event.inputs.release_mode == 'prod' || github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) && needs.build_and_test.result == 'success'
    runs-on: windows-latest

    steps:        
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: packs
        path: packs

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Publish packages to NuGet
      run: dotnet nuget push packs/**/*.nupkg -s 'https://api.nuget.org/v3/index.json' -k ${{ secrets.NUGET_ACCESS_TOKEN }}
    